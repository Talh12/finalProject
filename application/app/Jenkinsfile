pipeline {
    agent {
        kubernetes {
            label 'jenkins-agent'
            yamlFile 'application/jenkins-agent.yaml'
            defaultContainer 'dind'
        }
    }

    environment {
        DOCKER_IMAGE = 'tal5041996/weather-app'
        DOCKERHUB_CREDENTIALS = 'docker-cred'
        GITHUB_CREDENTIALS = 'tal-github'
        DOCKER_TAG = 'latest'
        FEATURE_BRANCH = 'feature'
        MAIN_BRANCH = 'main'
        REPO_URL = 'https://github.com/Talh12/finalProject.git'
        APPLICATION_DIR = 'application'
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}", "-f ${APPLICATION_DIR}/Dockerfile ${APPLICATION_DIR}")
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKERHUB_CREDENTIALS) {
                        docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}").push()
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh "docker-compose -f ${APPLICATION_DIR}/docker-compose.yaml up --build --abort-on-container-exit"
                }
            }
        }

        stage('Merge Feature Branch into Main and Push') {
            steps {
                script {
                    try {
                        // Ensure Git configurations
                        sh """
                        git config --global --add safe.directory /home/jenkins/agent/workspace/weather-app
                        git config --global user.email "halias32236@gmail.com"
                        git config --global user.name "Talh12"
                        """

                        // Fetch latest changes including branches
                        sh "git fetch origin '+refs/heads/*:refs/remotes/origin/*'"

                        // Checkout to main branch
                        sh "git checkout ${MAIN_BRANCH}"

                        // Track and checkout feature branch from origin if it exists
                        sh "git checkout -B ${FEATURE_BRANCH} origin/${FEATURE_BRANCH}"

                        // Merge feature branch into main
                        sh "git merge ${FEATURE_BRANCH}"

                        // Add all files and commit
                        sh "git add -A"
                        sh 'git commit -m "Merge ${FEATURE_BRANCH} into ${MAIN_BRANCH} by Jenkins"'

                        // Push changes to GitHub main branch
                        sh "git push origin ${MAIN_BRANCH}"
                    } catch (Exception e) {
                        echo "Failed to merge and push changes to GitHub: ${e.message}"
                        currentBuild.result = 'FAILURE'
                        error("Failed to merge and push changes to GitHub")
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                currentBuild.result = 'SUCCESS'
            }
        }
    }
}
