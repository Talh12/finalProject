pipeline {
    agent {
        kubernetes {
            label 'jenkins-agent'
            yamlFile 'application/jenkins-agent.yaml'
            defaultContainer 'dind'
        }
    }

    environment {
        DOCKER_IMAGE = 'tal5041996/weather-app'
        DOCKERHUB_CREDENTIALS = 'docker-cred'
        GITHUB_CREDENTIALS = 'tal-github'
        DOCKER_TAG = 'latest'
        FEATURE_BRANCH = 'feature'
        MAIN_BRANCH = 'main'
        REPO_URL = 'https://github.com/Talh12/finalProject.git'
        APPLICATION_DIR = 'application'
        VERSION = "${env.BUILD_NUMBER}"
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}", "-f ${APPLICATION_DIR}/Dockerfile ${APPLICATION_DIR}")
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKERHUB_CREDENTIALS) {
                        docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}").push()
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh "docker-compose -f ${APPLICATION_DIR}/docker-compose.yaml up --build --abort-on-container-exit"
                }
            }
        }

        stage('Push Changes to GitHub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'tal-github', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh '''
                            git config --global user.email "halias32236@gmail.com"
                            git config --global user.name "Talh12"
                            git fetch https://${USERNAME}:${PASSWORD}@github.com/Talh12/finalProject.git
                            git checkout --track origin/main
                            git add .
                            git commit -m "Update image tag to ${VERSION}"
                            git push https://${USERNAME}:${PASSWORD}@github.com/Talh12/finalProject.git
                        '''
                    }
                    echo 'Finished pushing changes to GitHub'
                }
            }
        }

    }

    post {
        always {
            script {
                currentBuild.result = 'SUCCESS'
            }
        }
    }
}
