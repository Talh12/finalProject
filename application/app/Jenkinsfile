pipeline {
    agent {
        kubernetes {
            label 'dind-agent'
            yamlFile 'application/jenkins-agent.yaml'
            defaultContainer 'dind'
        }
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('docker-cred')
        GITHUB_CREDENTIALS = credentials('tal-github')
        DOCKER_IMAGE = 'tal5041996/weather-app'
        DOCKER_TAG = 'latest'
        FEATURE_BRANCH = 'feature-branch'
        MAIN_BRANCH = 'main'
        REPO_URL = 'https://github.com/Talh12/finalProject.git'
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    try {
                        docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}")
                    } catch (Exception e) {
                        echo "Failed to build Docker image: ${e.message}"
                        error "Build failed"
                    }
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    try {
                        docker.withRegistry('https://docker.io', DOCKERHUB_CREDENTIALS) {
                            docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}").push()
                        }
                    } catch (Exception e) {
                        echo "Failed to push Docker image to Docker Hub: ${e.message}"
                        error "Push failed"
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    try {
                        sh 'docker-compose up --build --abort-on-container-exit'
                    } catch (Exception e) {
                        echo "Tests failed: ${e.message}"
                        error "Tests failed"
                    }
                }
            }
        }

        stage('Push Code to GitHub') {
            steps {
                script {
                    try {
                        sh """
                        git config --global user.email "halias32236@gmail.com"
                        git config --global user.name "Talh12"
                        git remote set-url origin ${REPO_URL}
                        git checkout -b ${FEATURE_BRANCH}
                        git add .
                        git commit -m "Automated commit by Jenkins"
                        git push origin ${FEATURE_BRANCH}
                        """
                    } catch (Exception e) {
                        echo "Failed to push code to GitHub: ${e.message}"
                        error "Push failed"
                    }
                }
            }
        }

        stage('Create Pull Request') {
            steps {
                script {
                    try {
                        sh """
                        hub pull-request -b ${MAIN_BRANCH} -h ${FEATURE_BRANCH} -m "Automated PR by Jenkins"
                        """
                    } catch (Exception e) {
                        echo "Failed to create pull request: ${e.message}"
                        error "PR creation failed"
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Finished pushing changes to GitHub'
            cleanWs()
        }
    }
}
