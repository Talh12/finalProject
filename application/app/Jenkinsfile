pipeline {
    agent {
        kubernetes {
            label 'dind-agent'
            yamlFile 'jenkins-agent.yaml'
            defaultContainer 'dind'
        }
    } 

    environment {
        // Define environment variables using 'env'
        env.DOCKERHUB_CREDENTIALS = credentials('docker-cred') 
        env.GITHUB_CREDENTIALS = credentials('tal-github')       
        env.DOCKER_IMAGE = 'tal5041996/weather-app'             
        env.DOCKER_TAG = 'latest'                                           
        env.FEATURE_BRANCH = 'feature-branch'                               
        env.MAIN_BRANCH = 'main'                                            
        env.REPO_URL = 'https://github.com/Talh12/finalProject.git'     
    }

    stages {
        stage("Checkout code") {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${env.DOCKER_IMAGE}:${env.DOCKER_TAG}")
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://docker.io', env.DOCKERHUB_CREDENTIALS) {
                        docker.image("${env.DOCKER_IMAGE}:${env.DOCKER_TAG}").push()
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh 'docker-compose up --build --abort-on-container-exit'
                }
            }
        }

        stage('Push Code to GitHub') {
            steps {
                script {
                    sh """
                    git config --global user.email "halias32236@gmail.com"
                    git config --global user.name "Talh12"
                    git remote set-url origin ${env.REPO_URL}
                    git checkout -b ${env.FEATURE_BRANCH}
                    git add .
                    git commit -m "Automated commit by Jenkins"
                    git push origin ${env.FEATURE_BRANCH}
                    """
                }
            }
        }

        stage('Create Pull Request') {
            steps {
                script {
                    sh """
                    hub pull-request -b ${env.MAIN_BRANCH} -h ${env.FEATURE_BRANCH} -m "Automated PR by Jenkins"
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
