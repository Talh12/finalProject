pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'tal5041996/weather-app'
        DOCKERHUB_CREDENTIALS = credentials('docker-cred')  
        GITHUB_CREDENTIALS = credentials('tal-github')     
        DOCKER_TAG = 'latest'
        FEATURE_BRANCH = 'feature-branch'
        MAIN_BRANCH = 'main'
        REPO_URL = 'https://github.com/Talh12/finalProject.git'
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}")
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKERHUB_CREDENTIALS) {
                        docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}").push()
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh 'docker-compose up --build --abort-on-container-exit'
                }
            }
        }

        stage('Push Code to GitHub') {
            steps {
                script {
                    gitSetup()
                    gitActions()
                }
            }
        }

        stage('Create Pull Request') {
            steps {
                script {
                    createPullRequest()
                }
            }
        }
    }

    post {
        always {
            script {
                currentBuild.result = 'SUCCESS'
            }
        }
    }
}

def gitSetup() {
    // Set Git configuration
    sh """
    git config --global user.email "halias32236@gmail.com"
    git config --global user.name "Talh12"
    """
}

def gitActions() {
    // Perform Git actions
    sh """
    git remote set-url origin ${REPO_URL}
    git checkout -b ${FEATURE_BRANCH}
    git add .
    git commit -m "Automated commit by Jenkins"
    git push origin ${FEATURE_BRANCH}
    """
}

def createPullRequest() {
    // Create pull request using 'hub' command
    sh """
    hub pull-request -b ${MAIN_BRANCH} -h ${FEATURE_BRANCH} -m "Automated PR by Jenkins"
    """
}
