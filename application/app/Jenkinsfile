pipeline {
    agent {
        kubernetes {
            label 'jenkins-agent'
            yamlFile 'application/jenkins-agent.yaml'
            defaultContainer 'dind'
        }
    }

    environment {
        DOCKER_IMAGE = 'tal5041996/weather-app'
        DOCKERHUB_CREDENTIALS = 'docker-cred'
        GITHUB_CREDENTIALS = 'tal-github'
        DOCKER_TAG = 'latest'
        FEATURE_BRANCH = 'feature'
        MAIN_BRANCH = 'main'
        REPO_URL = 'https://github.com/Talh12/finalProject.git'
        APPLICATION_DIR = 'application'
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}", "-f ${APPLICATION_DIR}/Dockerfile ${APPLICATION_DIR}")
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKERHUB_CREDENTIALS) {
                        docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}").push()
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh "docker-compose -f ${APPLICATION_DIR}/docker-compose.yaml up --build --abort-on-container-exit"
                }
            }
        }

        stage('Merge Feature Branch into Main and Push') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: GITHUB_CREDENTIALS, passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        sh """
                        set -x
                        git config --global user.email "halias32236@gmail.com"
                        git config --global user.name "Talh12"
                        git config --global --add safe.directory /home/jenkins/agent/workspace/weather-app
                        git clone ${REPO_URL} .
                        git checkout ${MAIN_BRANCH}
                        git merge origin/${FEATURE_BRANCH}
                        git add -A
                        git commit -m "Merge ${FEATURE_BRANCH} into ${MAIN_BRANCH} by Jenkins"
                        git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/Talh12/finalProject.git ${MAIN_BRANCH}
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                currentBuild.result = 'SUCCESS'
            }
        }
    }
}
